<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Forge: cpu/surface.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="forge.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Forge
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cpu_2surface_8cpp-example.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">cpu/surface.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div><div class="line"><span class="comment"> * Copyright (c) 2015-2019, ArrayFire</span></div><div class="line"><span class="comment"> * All rights reserved.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><span class="comment"> ********************************************************/</span></div><div class="line"></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="forge_8h.htm">forge.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#define USE_FORGE_CPU_COPY_HELPERS</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="ComputeCopy_8h.htm">ComputeCopy.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;complex&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">using namespace </span>std;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> XMIN = -8.0f;</div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> XMAX = 8.f;</div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> YMIN = -8.0f;</div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> YMAX = 8.f;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keywordtype">float</span> DX = 0.5;</div><div class="line"><span class="keyword">const</span> <span class="keywordtype">size_t</span> XSIZE = (XMAX-XMIN)/DX;</div><div class="line"><span class="keyword">const</span> <span class="keywordtype">size_t</span> YSIZE = (YMAX-YMIN)/DX;</div><div class="line"></div><div class="line"><span class="keywordtype">void</span> genSurface(<span class="keywordtype">float</span> dx, std::vector&lt;float&gt; &amp;vec )</div><div class="line">{</div><div class="line">    vec.clear();</div><div class="line">    <span class="keywordflow">for</span>(<span class="keywordtype">float</span> x=XMIN; x &lt; XMAX; x+=dx){</div><div class="line">        <span class="keywordflow">for</span>(<span class="keywordtype">float</span> y=YMIN; y &lt; YMAX; y+=dx){</div><div class="line">            vec.push_back(x);</div><div class="line">            vec.push_back(y);</div><div class="line">            <span class="keywordtype">float</span> z = sqrt(x*x+y*y) + 2.2204e-16;</div><div class="line">            vec.push_back(sin(z)/z);</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * First Forge call should be a window creation call</span></div><div class="line"><span class="comment">     * so that necessary OpenGL context is created for any</span></div><div class="line"><span class="comment">     * other forge::* object to be created successfully</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <a name="_a0"></a><a class="code" href="classforge_1_1Window.htm">forge::Window</a> wnd(1024, 768, <span class="stringliteral">&quot;3d Surface Demo&quot;</span>);</div><div class="line">    wnd.<a name="a1"></a><a class="code" href="classforge_1_1Window.htm#afdc06d5b1652d4ae491be94d3edc5a6f">makeCurrent</a>();</div><div class="line"></div><div class="line">    <a name="_a2"></a><a class="code" href="classforge_1_1Chart.htm">forge::Chart</a> chart(<a name="a3"></a><a class="code" href="defines_8h.htm#af4e160ad397b0c0d8271fab83e2441dba5209ecc54f589ec8cf18f2ffd750648c">FG_CHART_3D</a>);</div><div class="line">    chart.<a name="a4"></a><a class="code" href="classforge_1_1Chart.htm#a762125729a5894b7fb533fc4151e8c4e">setAxesLimits</a>(-10.f, 10.f, -10.f, 10.f, -0.5f, 1.f);</div><div class="line">    chart.<a name="a5"></a><a class="code" href="classforge_1_1Chart.htm#aa0fe71ff5413a2e8a4bcfc64538ef074">setAxesTitles</a>(<span class="stringliteral">&quot;x-axis&quot;</span>, <span class="stringliteral">&quot;y-axis&quot;</span>, <span class="stringliteral">&quot;z-axis&quot;</span>);</div><div class="line"></div><div class="line">    <a name="_a6"></a><a class="code" href="classforge_1_1Surface.htm">forge::Surface</a> surf = chart.<a name="a7"></a><a class="code" href="classforge_1_1Chart.htm#a360551677aab492011650112d6b31ea7">surface</a>(XSIZE, YSIZE, <a name="a8"></a><a class="code" href="namespaceforge.htm#acfe99d230e216901bd782cc580e4e815a82ea90203678bdd0b547068f0a76524b">forge::f32</a>);</div><div class="line">    surf.<a name="a9"></a><a class="code" href="classforge_1_1Surface.htm#a8e14e7f09511e4042e65b78e5b0ba0fc">setColor</a>(<a name="a10"></a><a class="code" href="defines_8h.htm#aa65cea65b505b5bb5946acdcb3e6bc38adb4ad5c8d9213ad8901d48c166d780bd">FG_YELLOW</a>);</div><div class="line"></div><div class="line">    <span class="comment">//generate a surface</span></div><div class="line">    std::vector&lt;float&gt; <span class="keyword">function</span>;</div><div class="line"></div><div class="line">    genSurface(DX, <span class="keyword">function</span>);</div><div class="line"></div><div class="line">    <a name="_a11"></a><a class="code" href="structGfxHandle.htm">GfxHandle</a>* handle;</div><div class="line">    createGLBuffer(&amp;handle, surf.<a name="a12"></a><a class="code" href="classforge_1_1Surface.htm#aaa2e743d9764f9443bf4b8ea62805de8">vertices</a>(), <a name="a13"></a><a class="code" href="ComputeCopy_8h.htm#adf8e136713c0691010d2bec6ba63e9cfa08d078104055dceac893e4a14c153b2c">FORGE_VERTEX_BUFFER</a>);</div><div class="line"></div><div class="line">    <span class="comment">/* copy your data into the pixel buffer object exposed by</span></div><div class="line"><span class="comment">     * forge::Plot class and then proceed to rendering.</span></div><div class="line"><span class="comment">     * To help the users with copying the data from compute</span></div><div class="line"><span class="comment">     * memory to display memory, Forge provides copy headers</span></div><div class="line"><span class="comment">     * along with the library to help with this task</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    copyToGLBuffer(handle, (<a class="code" href="ComputeCopy_8h.htm#a160b6c9800d06caf50586d67439790c3">ComputeResourceHandle</a>)<span class="keyword">function</span>.data(), surf.<a name="a14"></a><a class="code" href="classforge_1_1Surface.htm#a0a7be986ade6c80d40292308006af406">verticesSize</a>());</div><div class="line"></div><div class="line">    <span class="keywordflow">do</span> {</div><div class="line">        wnd.<a name="a15"></a><a class="code" href="classforge_1_1Window.htm#a5d3ed7b3fed2fb9d0f8ce0a44b487755">draw</a>(chart);</div><div class="line">    } <span class="keywordflow">while</span>(!wnd.<a name="a16"></a><a class="code" href="classforge_1_1Window.htm#a800cef45e6604024ba71700cf036baae">close</a>());</div><div class="line"></div><div class="line">    releaseGLBuffer(handle);</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div></div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sat Sep 10 2016 11:16:13 for Forge by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
