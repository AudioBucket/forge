<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Forge: Window Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="forge.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Forge
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.htm"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classforge_1_1Window.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Window Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> is where other objects such as Images, Plots etc.  
 <a href="classforge_1_1Window.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="window_8h_source.htm">window.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af92f7575fb88e9acb15306513e91b91c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#af92f7575fb88e9acb15306513e91b91c">Window</a> (const int pWidth, const int pHeight, const char *pTitle, const <a class="el" href="classforge_1_1Window.htm">Window</a> *pWindow=0, const bool invisible=false)</td></tr>
<tr class="memdesc:af92f7575fb88e9acb15306513e91b91c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> object.  <a href="#af92f7575fb88e9acb15306513e91b91c">More...</a><br /></td></tr>
<tr class="separator:af92f7575fb88e9acb15306513e91b91c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa48c3aee1280cde2731d9cb006e09eda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#aa48c3aee1280cde2731d9cb006e09eda">Window</a> (const <a class="el" href="classforge_1_1Window.htm">Window</a> &amp;other)</td></tr>
<tr class="memdesc:aa48c3aee1280cde2731d9cb006e09eda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor for <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a>.  <a href="#aa48c3aee1280cde2731d9cb006e09eda">More...</a><br /></td></tr>
<tr class="separator:aa48c3aee1280cde2731d9cb006e09eda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53df16f75e4cbb53420818f5fa234c94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a53df16f75e4cbb53420818f5fa234c94">~Window</a> ()</td></tr>
<tr class="memdesc:a53df16f75e4cbb53420818f5fa234c94"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> Destructor.  <a href="#a53df16f75e4cbb53420818f5fa234c94">More...</a><br /></td></tr>
<tr class="separator:a53df16f75e4cbb53420818f5fa234c94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668a0e04a09d0c6d68590dbb22c8c51d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a668a0e04a09d0c6d68590dbb22c8c51d">setFont</a> (<a class="el" href="classforge_1_1Font.htm">Font</a> *pFont)</td></tr>
<tr class="memdesc:a668a0e04a09d0c6d68590dbb22c8c51d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set font to be used by the window to draw text.  <a href="#a668a0e04a09d0c6d68590dbb22c8c51d">More...</a><br /></td></tr>
<tr class="separator:a668a0e04a09d0c6d68590dbb22c8c51d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54a2404b9994c6e3ec4712a4358bda0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a54a2404b9994c6e3ec4712a4358bda0b">setTitle</a> (const char *pTitle)</td></tr>
<tr class="memdesc:a54a2404b9994c6e3ec4712a4358bda0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the window title.  <a href="#a54a2404b9994c6e3ec4712a4358bda0b">More...</a><br /></td></tr>
<tr class="separator:a54a2404b9994c6e3ec4712a4358bda0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7ac242c7c9ad29cc37dfcbd2cffe3f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#af7ac242c7c9ad29cc37dfcbd2cffe3f5">setPos</a> (const int pX, const int pY)</td></tr>
<tr class="memdesc:af7ac242c7c9ad29cc37dfcbd2cffe3f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the start position where the window will appear.  <a href="#af7ac242c7c9ad29cc37dfcbd2cffe3f5">More...</a><br /></td></tr>
<tr class="separator:af7ac242c7c9ad29cc37dfcbd2cffe3f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab80bb9f311a3d6bd2421b6871279ba9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#aab80bb9f311a3d6bd2421b6871279ba9">setSize</a> (const unsigned pWidth, const unsigned pHeight)</td></tr>
<tr class="memdesc:aab80bb9f311a3d6bd2421b6871279ba9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the size of the window programmatically.  <a href="#aab80bb9f311a3d6bd2421b6871279ba9">More...</a><br /></td></tr>
<tr class="separator:aab80bb9f311a3d6bd2421b6871279ba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16bb77d4c22a627e316299c06389e274"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a16bb77d4c22a627e316299c06389e274">setColorMap</a> (const <a class="el" href="defines_8h.htm#a3c25187db6a9805731a4fd67959ab461">ColorMap</a> cmap)</td></tr>
<tr class="memdesc:a16bb77d4c22a627e316299c06389e274"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the colormap to be used for subsequent rendering calls.  <a href="#a16bb77d4c22a627e316299c06389e274">More...</a><br /></td></tr>
<tr class="separator:a16bb77d4c22a627e316299c06389e274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0624dfa20f28a5894c233b62a2c0fe1b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a0624dfa20f28a5894c233b62a2c0fe1b">context</a> () const </td></tr>
<tr class="memdesc:a0624dfa20f28a5894c233b62a2c0fe1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get rendering backend context handle.  <a href="#a0624dfa20f28a5894c233b62a2c0fe1b">More...</a><br /></td></tr>
<tr class="separator:a0624dfa20f28a5894c233b62a2c0fe1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b8fd58d46119ebcc6486d3f4a6f5079"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a2b8fd58d46119ebcc6486d3f4a6f5079">display</a> () const </td></tr>
<tr class="memdesc:a2b8fd58d46119ebcc6486d3f4a6f5079"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Native <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> display handle.  <a href="#a2b8fd58d46119ebcc6486d3f4a6f5079">More...</a><br /></td></tr>
<tr class="separator:a2b8fd58d46119ebcc6486d3f4a6f5079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d63561e3717075d82b6c45f0b26286a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a9d63561e3717075d82b6c45f0b26286a">width</a> () const </td></tr>
<tr class="separator:a9d63561e3717075d82b6c45f0b26286a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb4e4cd18980ebe2f4deafe56e6d9332"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#aeb4e4cd18980ebe2f4deafe56e6d9332">height</a> () const </td></tr>
<tr class="separator:aeb4e4cd18980ebe2f4deafe56e6d9332"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd040f25719195f6f87709d5de31294b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> <a class="el" href="defines_8h.htm#ac1d517cd5832c5dc2639231053109a24">fg_window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#afd040f25719195f6f87709d5de31294b">get</a> () const </td></tr>
<tr class="separator:afd040f25719195f6f87709d5de31294b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdc06d5b1652d4ae491be94d3edc5a6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#afdc06d5b1652d4ae491be94d3edc5a6f">makeCurrent</a> ()</td></tr>
<tr class="memdesc:afdc06d5b1652d4ae491be94d3edc5a6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make the current window's rendering context active context.  <a href="#afdc06d5b1652d4ae491be94d3edc5a6f">More...</a><br /></td></tr>
<tr class="separator:afdc06d5b1652d4ae491be94d3edc5a6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a505fdb047ae9fb4e3a844a979512ff93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a505fdb047ae9fb4e3a844a979512ff93">hide</a> ()</td></tr>
<tr class="memdesc:a505fdb047ae9fb4e3a844a979512ff93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hide the window.  <a href="#a505fdb047ae9fb4e3a844a979512ff93">More...</a><br /></td></tr>
<tr class="separator:a505fdb047ae9fb4e3a844a979512ff93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae852a84127e1cf6eaae8c91d90357045"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#ae852a84127e1cf6eaae8c91d90357045">show</a> ()</td></tr>
<tr class="memdesc:ae852a84127e1cf6eaae8c91d90357045"><td class="mdescLeft">&#160;</td><td class="mdescRight">Show the window if hidden, otherwise no effect.  <a href="#ae852a84127e1cf6eaae8c91d90357045">More...</a><br /></td></tr>
<tr class="separator:ae852a84127e1cf6eaae8c91d90357045"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a800cef45e6604024ba71700cf036baae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a800cef45e6604024ba71700cf036baae">close</a> ()</td></tr>
<tr class="memdesc:a800cef45e6604024ba71700cf036baae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the window is ready for close.  <a href="#a800cef45e6604024ba71700cf036baae">More...</a><br /></td></tr>
<tr class="separator:a800cef45e6604024ba71700cf036baae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d3ed7b3fed2fb9d0f8ce0a44b487755"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a5d3ed7b3fed2fb9d0f8ce0a44b487755">draw</a> (const <a class="el" href="classforge_1_1Image.htm">Image</a> &amp;pImage, const bool pKeepAspectRatio=true)</td></tr>
<tr class="memdesc:a5d3ed7b3fed2fb9d0f8ce0a44b487755"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render an <a class="el" href="classforge_1_1Image.htm" title="Image is plain rendering of an image over the window or sub-region of it. ">Image</a> to <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a>.  <a href="#a5d3ed7b3fed2fb9d0f8ce0a44b487755">More...</a><br /></td></tr>
<tr class="separator:a5d3ed7b3fed2fb9d0f8ce0a44b487755"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ed095429857c36e4d5805eb7c782b7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a6ed095429857c36e4d5805eb7c782b7c">draw</a> (const <a class="el" href="classforge_1_1Chart.htm">Chart</a> &amp;pChart)</td></tr>
<tr class="memdesc:a6ed095429857c36e4d5805eb7c782b7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render a chart to <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a>.  <a href="#a6ed095429857c36e4d5805eb7c782b7c">More...</a><br /></td></tr>
<tr class="separator:a6ed095429857c36e4d5805eb7c782b7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97f8b92672898722c06c31f776dea0de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a97f8b92672898722c06c31f776dea0de">draw</a> (const int pRows, const int pCols, const int pIndex, const <a class="el" href="classforge_1_1Image.htm">Image</a> &amp;pImage, const char *pTitle=0, const bool pKeepAspectRatio=true)</td></tr>
<tr class="memdesc:a97f8b92672898722c06c31f776dea0de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render <a class="el" href="classforge_1_1Image.htm" title="Image is plain rendering of an image over the window or sub-region of it. ">Image</a> to given sub-region of the window in multiview mode.  <a href="#a97f8b92672898722c06c31f776dea0de">More...</a><br /></td></tr>
<tr class="separator:a97f8b92672898722c06c31f776dea0de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba1b5017a003871f194987fd7eedcf7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#aba1b5017a003871f194987fd7eedcf7d">draw</a> (const int pRows, const int pCols, const int pIndex, const <a class="el" href="classforge_1_1Chart.htm">Chart</a> &amp;pChart, const char *pTitle=0)</td></tr>
<tr class="memdesc:aba1b5017a003871f194987fd7eedcf7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render the chart to given sub-region of the window in multiview mode.  <a href="#aba1b5017a003871f194987fd7eedcf7d">More...</a><br /></td></tr>
<tr class="separator:aba1b5017a003871f194987fd7eedcf7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac236527803a9ed5b5a908d2014f9e1ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#ac236527803a9ed5b5a908d2014f9e1ab">swapBuffers</a> ()</td></tr>
<tr class="memdesc:ac236527803a9ed5b5a908d2014f9e1ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps background buffer with front buffer.  <a href="#ac236527803a9ed5b5a908d2014f9e1ab">More...</a><br /></td></tr>
<tr class="separator:ac236527803a9ed5b5a908d2014f9e1ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b42bb1b6fe76015118491ca1c9f7e84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classforge_1_1Window.htm#a7b42bb1b6fe76015118491ca1c9f7e84">saveFrameBuffer</a> (const char *pFullPath)</td></tr>
<tr class="memdesc:a7b42bb1b6fe76015118491ca1c9f7e84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save window frame buffer to give location in provided image format.  <a href="#a7b42bb1b6fe76015118491ca1c9f7e84">More...</a><br /></td></tr>
<tr class="separator:a7b42bb1b6fe76015118491ca1c9f7e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> is where other objects such as Images, Plots etc. </p>
<p>are rendered. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="cpu_2bubblechart_8cpp-example.htm#_a0">cpu/bubblechart.cpp</a>, <a class="el" href="cpu_2field_8cpp-example.htm#_a0">cpu/field.cpp</a>, <a class="el" href="cpu_2fractal_8cpp-example.htm#_a0">cpu/fractal.cpp</a>, <a class="el" href="cpu_2histogram_8cpp-example.htm#_a0">cpu/histogram.cpp</a>, <a class="el" href="cpu_2plot3_8cpp-example.htm#_a0">cpu/plot3.cpp</a>, <a class="el" href="cpu_2plotting_8cpp-example.htm#_a0">cpu/plotting.cpp</a>, <a class="el" href="cpu_2stream_8cpp-example.htm#_a0">cpu/stream.cpp</a>, <a class="el" href="cpu_2surface_8cpp-example.htm#_a0">cpu/surface.cpp</a>, <a class="el" href="opencl_2bubblechart_8cpp-example.htm#_a0">opencl/bubblechart.cpp</a>, <a class="el" href="opencl_2cl_helpers_8h-example.htm#_a0">opencl/cl_helpers.h</a>, <a class="el" href="opencl_2field_8cpp-example.htm#_a0">opencl/field.cpp</a>, <a class="el" href="opencl_2fractal_8cpp-example.htm#_a0">opencl/fractal.cpp</a>, <a class="el" href="opencl_2histogram_8cpp-example.htm#_a0">opencl/histogram.cpp</a>, <a class="el" href="opencl_2plot3_8cpp-example.htm#_a0">opencl/plot3.cpp</a>, <a class="el" href="opencl_2plotting_8cpp-example.htm#_a0">opencl/plotting.cpp</a>, <a class="el" href="opencl_2stream_8cpp-example.htm#_a0">opencl/stream.cpp</a>, and <a class="el" href="opencl_2surface_8cpp-example.htm#_a0">opencl/surface.cpp</a>.</dd>
</dl></div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af92f7575fb88e9acb15306513e91b91c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> <a class="el" href="classforge_1_1Window.htm">Window</a> </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pTitle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classforge_1_1Window.htm">Window</a> *&#160;</td>
          <td class="paramname"><em>pWindow</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>invisible</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pWidth</td><td>Width of the display window </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pHeight</td><td>Height of the display window </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTitle</td><td>window Title </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pWindow</td><td>An already existing window with which the window to be created should share the rendering context. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">invisible</td><td>window is created in invisible mode. User has to call <a class="el" href="classforge_1_1Window.htm#ae852a84127e1cf6eaae8c91d90357045" title="Show the window if hidden, otherwise no effect. ">Window::show()</a> when they decide to actually display the window </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa48c3aee1280cde2731d9cb006e09eda"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> <a class="el" href="classforge_1_1Window.htm">Window</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classforge_1_1Window.htm">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor for <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">other</td><td>is the <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> of which we make a copy of. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a53df16f75e4cbb53420818f5fa234c94"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> ~<a class="el" href="classforge_1_1Window.htm">Window</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> Destructor. </p>
<p>Decrements the reference count to the shared window object. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a800cef45e6604024ba71700cf036baae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> bool close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the window is ready for close. </p>
<p>This happens when an user presses <code>ESC</code> key while the window is in focus or clicks on the close button of the window</p>
<dl class="section return"><dt>Returns</dt><dd>true | false </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="cpu_2field_8cpp-example.htm#a27">cpu/field.cpp</a>, <a class="el" href="cpu_2fractal_8cpp-example.htm#a13">cpu/fractal.cpp</a>, <a class="el" href="cpu_2histogram_8cpp-example.htm#a24">cpu/histogram.cpp</a>, <a class="el" href="cpu_2plot3_8cpp-example.htm#a15">cpu/plot3.cpp</a>, <a class="el" href="cpu_2plotting_8cpp-example.htm#a23">cpu/plotting.cpp</a>, <a class="el" href="cpu_2stream_8cpp-example.htm#a19">cpu/stream.cpp</a>, <a class="el" href="cpu_2surface_8cpp-example.htm#a16">cpu/surface.cpp</a>, <a class="el" href="opencl_2bubblechart_8cpp-example.htm#a27">opencl/bubblechart.cpp</a>, <a class="el" href="opencl_2field_8cpp-example.htm#a27">opencl/field.cpp</a>, <a class="el" href="opencl_2fractal_8cpp-example.htm#a10">opencl/fractal.cpp</a>, <a class="el" href="opencl_2histogram_8cpp-example.htm#a25">opencl/histogram.cpp</a>, <a class="el" href="opencl_2plot3_8cpp-example.htm#a15">opencl/plot3.cpp</a>, <a class="el" href="opencl_2plotting_8cpp-example.htm#a23">opencl/plotting.cpp</a>, <a class="el" href="opencl_2stream_8cpp-example.htm#a19">opencl/stream.cpp</a>, and <a class="el" href="opencl_2surface_8cpp-example.htm#a16">opencl/surface.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a0624dfa20f28a5894c233b62a2c0fe1b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> long long context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get rendering backend context handle. </p>
<dl class="section return"><dt>Returns</dt><dd>Context handle for the window's rendering context </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="opencl_2cl_helpers_8h-example.htm#a1">opencl/cl_helpers.h</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a2b8fd58d46119ebcc6486d3f4a6f5079"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> long long display </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get Native <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> display handle. </p>
<dl class="section return"><dt>Returns</dt><dd>Display handle of the native window implemenation of <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a> </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="opencl_2cl_helpers_8h-example.htm#a2">opencl/cl_helpers.h</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a5d3ed7b3fed2fb9d0f8ce0a44b487755"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void draw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classforge_1_1Image.htm">Image</a> &amp;&#160;</td>
          <td class="paramname"><em>pImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>pKeepAspectRatio</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Render an <a class="el" href="classforge_1_1Image.htm" title="Image is plain rendering of an image over the window or sub-region of it. ">Image</a> to <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pImage</td><td>is an object of class <a class="el" href="classforge_1_1Image.htm" title="Image is plain rendering of an image over the window or sub-region of it. ">Image</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pKeepAspectRatio</td><td>when set to true keeps the aspect ratio of the input image constant.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>this draw call automatically swaps back buffer with front buffer (double buffering mechanism). </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="cpu_2field_8cpp-example.htm#a26">cpu/field.cpp</a>, <a class="el" href="cpu_2fractal_8cpp-example.htm#a12">cpu/fractal.cpp</a>, <a class="el" href="cpu_2histogram_8cpp-example.htm#a22">cpu/histogram.cpp</a>, <a class="el" href="cpu_2plot3_8cpp-example.htm#a14">cpu/plot3.cpp</a>, <a class="el" href="cpu_2plotting_8cpp-example.htm#a22">cpu/plotting.cpp</a>, <a class="el" href="cpu_2stream_8cpp-example.htm#a18">cpu/stream.cpp</a>, <a class="el" href="cpu_2surface_8cpp-example.htm#a15">cpu/surface.cpp</a>, <a class="el" href="opencl_2bubblechart_8cpp-example.htm#a26">opencl/bubblechart.cpp</a>, <a class="el" href="opencl_2field_8cpp-example.htm#a26">opencl/field.cpp</a>, <a class="el" href="opencl_2fractal_8cpp-example.htm#a9">opencl/fractal.cpp</a>, <a class="el" href="opencl_2histogram_8cpp-example.htm#a23">opencl/histogram.cpp</a>, <a class="el" href="opencl_2plot3_8cpp-example.htm#a14">opencl/plot3.cpp</a>, <a class="el" href="opencl_2plotting_8cpp-example.htm#a22">opencl/plotting.cpp</a>, <a class="el" href="opencl_2stream_8cpp-example.htm#a18">opencl/stream.cpp</a>, and <a class="el" href="opencl_2surface_8cpp-example.htm#a15">opencl/surface.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a6ed095429857c36e4d5805eb7c782b7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void draw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classforge_1_1Chart.htm">Chart</a> &amp;&#160;</td>
          <td class="paramname"><em>pChart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Render a chart to <a class="el" href="classforge_1_1Window.htm" title="Window is where other objects such as Images, Plots etc. ">Window</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pChart</td><td>is an chart object</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>this draw call automatically swaps back buffer with front buffer (double buffering mechanism). </dd></dl>

</div>
</div>
<a class="anchor" id="a97f8b92672898722c06c31f776dea0de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void draw </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pCols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classforge_1_1Image.htm">Image</a> &amp;&#160;</td>
          <td class="paramname"><em>pImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pTitle</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>pKeepAspectRatio</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Render <a class="el" href="classforge_1_1Image.htm" title="Image is plain rendering of an image over the window or sub-region of it. ">Image</a> to given sub-region of the window in multiview mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pRows</td><td>indicates the number of rows in grid layout </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCols</td><td>indicates the number of columns in grid layout </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pIndex</td><td>indicates the index of cell in the layout represented by <code>pRows</code> and <code>pCols</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pImage</td><td>is an object of class <a class="el" href="classforge_1_1Image.htm" title="Image is plain rendering of an image over the window or sub-region of it. ">Image</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTitle</td><td>is the title that will be displayed for the cell represented by <code>pColId</code> and <code>pRowId</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pKeepAspectRatio</td><td>when set to true keeps the aspect ratio of the input image constant.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>this draw call doesn't automatically swap back buffer with front buffer (double buffering mechanism) since it doesn't have the knowledge of which sub-regions already got rendered. We should call <a class="el" href="classforge_1_1Window.htm#a5d3ed7b3fed2fb9d0f8ce0a44b487755" title="Render an Image to Window. ">Window::draw()</a> once all draw calls corresponding to all sub-regions are called when in multiview mode. </dd></dl>

</div>
</div>
<a class="anchor" id="aba1b5017a003871f194987fd7eedcf7d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void draw </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pCols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classforge_1_1Chart.htm">Chart</a> &amp;&#160;</td>
          <td class="paramname"><em>pChart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pTitle</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Render the chart to given sub-region of the window in multiview mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pRows</td><td>indicates the number of rows in grid layout </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCols</td><td>indicates the number of columns in grid layout </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pIndex</td><td>indicates the index of cell in the layout represented by <code>pRows</code> and <code>pCols</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pChart</td><td>is a <a class="el" href="classforge_1_1Chart.htm" title="Chart is base canvas where other plottable objects are rendered. ">Chart</a> with one or more plottable renderables </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTitle</td><td>is the title that will be displayed for the cell represented by <code>pColId</code> and <code>pRowId</code> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>this draw call doesn't automatically swap back buffer with front buffer (double buffering mechanism) since it doesn't have the knowledge of which sub-regions already got rendered. We should call <a class="el" href="classforge_1_1Window.htm#a5d3ed7b3fed2fb9d0f8ce0a44b487755" title="Render an Image to Window. ">Window::draw()</a> once all draw calls corresponding to all sub-regions are called when in multiview mode. </dd></dl>

</div>
</div>
<a class="anchor" id="afd040f25719195f6f87709d5de31294b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> <a class="el" href="defines_8h.htm#ac1d517cd5832c5dc2639231053109a24">fg_window</a> get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>internal handle for window implementation </dd></dl>

</div>
</div>
<a class="anchor" id="aeb4e4cd18980ebe2f4deafe56e6d9332"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> int height </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>window height </dd></dl>

</div>
</div>
<a class="anchor" id="a505fdb047ae9fb4e3a844a979512ff93"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void hide </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Hide the window. </p>

</div>
</div>
<a class="anchor" id="afdc06d5b1652d4ae491be94d3edc5a6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void makeCurrent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Make the current window's rendering context active context. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="cpu_2field_8cpp-example.htm#a1">cpu/field.cpp</a>, <a class="el" href="cpu_2fractal_8cpp-example.htm#a1">cpu/fractal.cpp</a>, <a class="el" href="cpu_2histogram_8cpp-example.htm#a1">cpu/histogram.cpp</a>, <a class="el" href="cpu_2plot3_8cpp-example.htm#a1">cpu/plot3.cpp</a>, <a class="el" href="cpu_2plotting_8cpp-example.htm#a1">cpu/plotting.cpp</a>, <a class="el" href="cpu_2stream_8cpp-example.htm#a1">cpu/stream.cpp</a>, <a class="el" href="cpu_2surface_8cpp-example.htm#a1">cpu/surface.cpp</a>, <a class="el" href="opencl_2bubblechart_8cpp-example.htm#a1">opencl/bubblechart.cpp</a>, <a class="el" href="opencl_2field_8cpp-example.htm#a1">opencl/field.cpp</a>, <a class="el" href="opencl_2fractal_8cpp-example.htm#a1">opencl/fractal.cpp</a>, <a class="el" href="opencl_2histogram_8cpp-example.htm#a1">opencl/histogram.cpp</a>, <a class="el" href="opencl_2plot3_8cpp-example.htm#a1">opencl/plot3.cpp</a>, <a class="el" href="opencl_2plotting_8cpp-example.htm#a1">opencl/plotting.cpp</a>, <a class="el" href="opencl_2stream_8cpp-example.htm#a1">opencl/stream.cpp</a>, and <a class="el" href="opencl_2surface_8cpp-example.htm#a1">opencl/surface.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a7b42bb1b6fe76015118491ca1c9f7e84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void saveFrameBuffer </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pFullPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save window frame buffer to give location in provided image format. </p>
<p>The image format to be saved in is inferred from the file extension provided in the path string.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pFullPath</td><td>should be the absolute path of the target location where the framebuffer should be stored. The target image format is inferred from the file extension. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a16bb77d4c22a627e316299c06389e274"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void setColorMap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a3c25187db6a9805731a4fd67959ab461">ColorMap</a>&#160;</td>
          <td class="paramname"><em>cmap</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the colormap to be used for subsequent rendering calls. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cmap</td><td>should be one of the enum values from <a class="el" href="namespaceforge.htm#af04e68934546749d9ca2bdee4ba28066">ColorMap</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a668a0e04a09d0c6d68590dbb22c8c51d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void setFont </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classforge_1_1Font.htm">Font</a> *&#160;</td>
          <td class="paramname"><em>pFont</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set font to be used by the window to draw text. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pFont</td><td><a class="el" href="classforge_1_1Font.htm" title="Font object is essentially a resource handler for the specific font you want to use. ">Font</a> object pointer </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="cpu_2fractal_8cpp-example.htm#a4">cpu/fractal.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="af7ac242c7c9ad29cc37dfcbd2cffe3f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void setPos </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>pY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the start position where the window will appear. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pX</td><td>is horizontal coordinate </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pY</td><td>is vertical coordinate </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aab80bb9f311a3d6bd2421b6871279ba9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void setSize </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>pWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>pHeight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the size of the window programmatically. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pWidth</td><td>target width </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pHeight</td><td>target height </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a54a2404b9994c6e3ec4712a4358bda0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void setTitle </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pTitle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the window title. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pTitle</td><td>is the window title </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae852a84127e1cf6eaae8c91d90357045"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void show </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Show the window if hidden, otherwise no effect. </p>

</div>
</div>
<a class="anchor" id="ac236527803a9ed5b5a908d2014f9e1ab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> void swapBuffers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Swaps background buffer with front buffer. </p>
<p>This draw call should only be used when the window is displaying something in multiview mode </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="cpu_2histogram_8cpp-example.htm#a23">cpu/histogram.cpp</a>, and <a class="el" href="opencl_2histogram_8cpp-example.htm#a24">opencl/histogram.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a9d63561e3717075d82b6c45f0b26286a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a0c13890087e4c32266826db56c710098">FGAPI</a> int width </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>window width </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="window_8h_source.htm">window.h (2017-05-08 15:11:27 +0530, (build c6bb28c))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceforge.htm">forge</a></li><li class="navelem"><a class="el" href="classforge_1_1Window.htm">Window</a></li>
    <li class="footer">Generated on Thu May 18 2017 10:55:58 for Forge by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
